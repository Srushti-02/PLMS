@model PLMS.Models.ModelViews.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <div class="d-flex align-items-center mx-3">
            <!-- Back Button -->
            <a href="javascript:void(0)" onclick="goBack()" class="btn btn-outline-light me-4">
                <i class="fas fa-arrow-left me-1"></i> Back
            </a>
        </div>

        <!-- Brand - Centered -->
        <div class="mx-auto">
            <a class="navbar-brand">
                <i class="fas fa-shield-halved text-white me-2" style="font-size: 1.2rem;"></i>BorrowEase
            </a>
        </div>

        <!-- Right Side Nav -->
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="btn ms-3 text-white" style="background-color: black; border: 1px solid white;" href="@Url.Action("LogOut", "Applicant")">
                        Logout
                    </a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div class="container mt-4 border rounded p-4 shadow-sm" style="border: 2px solid #dee2e6; background-color: #fefefe;">

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <h2 class="text-center mb-4">🔑 Change Your Password</h2>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        ✅ @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        @Html.LabelFor(m => m.CurrentPassword, "🔒 Current Password", new { @class = "form-label" })
                        <div class="input-group">
                            @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control", id = "CurrentPassword" })
                            <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('CurrentPassword', this)">🔒</button>
                        </div>
                        @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.NewPassword, "🆕 New Password", new { @class = "form-label" })
                        <div class="input-group">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", id = "NewPassword", oninput = "checkStrength(this.value)" })
                            <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('NewPassword', this)">🔒</button>
                        </div>
                        <small id="password-strength" class="form-text"></small>
                        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.ConfirmPassword, "✅ Confirm New Password", new { @class = "form-label" })
                        <div class="input-group">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "ConfirmPassword" })
                            <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('ConfirmPassword', this)">🔒</button>
                        </div>
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                    <button type="submit" class="btn btn-success w-100">🔁 Change Password</button>
                }
            </div>
        </div>
    </div>

    <script>
        function togglePassword(id, btn) {
            var input = document.getElementById(id);
            if (input.type === "password") {
                input.type = "text";
                btn.textContent = "🔓"; // open lock
            } else {
                input.type = "password";
                btn.textContent = "🔒"; // closed lock
            }
        }

        function checkStrength(password) {
            const strengthEl = document.getElementById('password-strength');
            let strength = 0;

            if (password.length >= 8) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[a-z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[\W]/.test(password)) strength++;

            const messages = [
                "❗ Very Weak 😟",
                "⚠️ Weak 😕",
                "🙂 Moderate",
                "💪 Strong",
                "🚀 Very Strong"
            ];

            strengthEl.textContent = password ? messages[strength - 1] || "❗ Very Weak" : "";
            strengthEl.className = "form-text text-" + (strength >= 4 ? "success" : strength >= 2 ? "warning" : "danger");
        }
    </script>
    <script>
        function goBack() {
            if (document.referrer) {
                window.history.back();
            } else {
                window.location.href = "/";
            }
        }
    </script>
